
        (define (problem p01) (:domain lights-out)
        (:objects
        
 x0 x1 x2 x3- PosX
 y0 y1 y2 y3- PosY   
        )

        (:init
        
(adj x0 x0 y0 y0 )
(adj x0 x0 y0 y0 )
(adj x0 x0 y0 y0 )
(adj x0 x0 y0 y0 )
(adj x0 x0 y1 y1 )
(adj x0 x0 y1 y1 )
(adj x0 x0 y1 y1 )
(adj x0 x0 y1 y1 )
(adj x0 x0 y2 y2 )
(adj x0 x0 y2 y2 )
(adj x0 x0 y2 y2 )
(adj x0 x0 y2 y2 )
(adj x0 x0 y3 y3 )
(adj x0 x0 y3 y3 )
(adj x0 x0 y3 y3 )
(adj x0 x0 y3 y3 )
(adj x1 x1 y0 y0 )
(adj x1 x1 y0 y0 )
(adj x1 x1 y0 y0 )
(adj x1 x1 y0 y0 )
(adj x1 x1 y1 y1 )
(adj x1 x1 y1 y1 )
(adj x1 x1 y1 y1 )
(adj x1 x1 y1 y1 )
(adj x1 x1 y2 y2 )
(adj x1 x1 y2 y2 )
(adj x1 x1 y2 y2 )
(adj x1 x1 y2 y2 )
(adj x1 x1 y3 y3 )
(adj x1 x1 y3 y3 )
(adj x1 x1 y3 y3 )
(adj x1 x1 y3 y3 )
(adj x2 x2 y0 y0 )
(adj x2 x2 y0 y0 )
(adj x2 x2 y0 y0 )
(adj x2 x2 y0 y0 )
(adj x2 x2 y1 y1 )
(adj x2 x2 y1 y1 )
(adj x2 x2 y1 y1 )
(adj x2 x2 y1 y1 )
(adj x2 x2 y2 y2 )
(adj x2 x2 y2 y2 )
(adj x2 x2 y2 y2 )
(adj x2 x2 y2 y2 )
(adj x2 x2 y3 y3 )
(adj x2 x2 y3 y3 )
(adj x2 x2 y3 y3 )
(adj x2 x2 y3 y3 )
(adj x3 x3 y0 y0 )
(adj x3 x3 y0 y0 )
(adj x3 x3 y0 y0 )
(adj x3 x3 y0 y0 )
(adj x3 x3 y1 y1 )
(adj x3 x3 y1 y1 )
(adj x3 x3 y1 y1 )
(adj x3 x3 y1 y1 )
(adj x3 x3 y2 y2 )
(adj x3 x3 y2 y2 )
(adj x3 x3 y2 y2 )
(adj x3 x3 y2 y2 )
(adj x3 x3 y3 y3 )
(adj x3 x3 y3 y3 )
(adj x3 x3 y3 y3 )
(adj x3 x3 y3 y3 )
( is-broken x0 y1 )
( is-lit x0 y2 )
( is-lit x0 y3 )
( is-broken x0 y3 )
( is-broken x1 y5 )
( is-lit x1 y6 )
( is-lit x1 y7 )
( is-broken x1 y7 )
( is-broken x2 y9 )
( is-lit x2 y10 )
( is-lit x2 y11 )
( is-broken x2 y11 )
( is-broken x3 y13 )
( is-lit x3 y14 )
( is-lit x3 y15 )
( is-broken x3 y15 )
        )
            (:goal (and
                ( success )
                
                ; ( forall ( ?x - PosX )
                ;     ( forall ( ?y - PosY )
                ;         ( not ( is-lit ?x ?y ) )
                ;     )
                ; )
            )))
        